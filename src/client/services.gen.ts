// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch'
import type {
  UserControllerListData,
  UserControllerListError,
  UserControllerListResponse,
  UserControllerPostError,
  UserControllerPostResponse,
  UserControllerUpdateOneError,
  UserControllerUpdateOneResponse,
  UserControllerGetOneData,
  UserControllerGetOneError,
  UserControllerGetOneResponse,
  UserControllerDeleteData,
  UserControllerDeleteError,
  UserControllerDeleteResponse,
} from './types.gen'

export const client = createClient(createConfig())

/**
 * 列表
 */
export const userControllerList = <ThrowOnError extends boolean = false>(
  options?: Options<UserControllerListData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<UserControllerListResponse, UserControllerListError, ThrowOnError>({
    ...options,
    url: '/api/user',
  })
}

/**
 * 新增
 */
export const userControllerPost = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
  return (options?.client ?? client).post<UserControllerPostResponse, UserControllerPostError, ThrowOnError>({
    ...options,
    url: '/api/user',
  })
}

/**
 * 修改
 */
export const userControllerUpdateOne = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).patch<UserControllerUpdateOneResponse, UserControllerUpdateOneError, ThrowOnError>(
    {
      ...options,
      url: '/api/user',
    },
  )
}

/**
 * item
 */
export const userControllerGetOne = <ThrowOnError extends boolean = false>(
  options: Options<UserControllerGetOneData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<UserControllerGetOneResponse, UserControllerGetOneError, ThrowOnError>({
    ...options,
    url: '/api/user/{id}',
  })
}

/**
 * 删除
 */
export const userControllerDelete = <ThrowOnError extends boolean = false>(
  options: Options<UserControllerDeleteData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<UserControllerDeleteResponse, UserControllerDeleteError, ThrowOnError>({
    ...options,
    url: '/api/user/{id}',
  })
}
