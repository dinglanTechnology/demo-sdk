// This file is auto-generated by @hey-api/openapi-ts

export const $User = {
  type: 'object',
  properties: {
    createdBy: {
      type: 'number',
      description: '创建人',
    },
    updatedBy: {
      type: 'number',
      description: '最后更新的人',
    },
    weworkUserId: {
      type: 'string',
    },
    phone: {
      type: 'string',
    },
    name: {
      type: 'string',
    },
    status: {
      enum: ['enabled', 'disabled'],
      type: 'string',
    },
    userPermissions: {
      type: 'object',
      default: [],
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.761Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.761Z',
    },
  },
  required: ['weworkUserId', 'phone', 'name', 'status', 'userPermissions', 'id', 'createdAt', 'updatedAt'],
} as const

export const $WeworkLoginInput = {
  type: 'object',
  properties: {
    code: {
      type: 'string',
      description: '企业微信授权所需的code',
    },
  },
  required: ['code'],
} as const

export const $LoginResult = {
  type: 'object',
  properties: {
    token: {
      type: 'string',
      description: '需要加在request header里面, 格式大概如下 Authorization: Bearer ${token}',
    },
  },
  required: ['token'],
} as const

export const $UserFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    name: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    section: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'estate',
              type: 'string',
            },
            {
              const: 'architecture',
              type: 'string',
            },
            {
              const: 'channel',
              type: 'string',
            },
            {
              const: 'business',
              type: 'string',
            },
            {
              const: 'unknown',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'estate',
                    type: 'string',
                  },
                  {
                    const: 'architecture',
                    type: 'string',
                  },
                  {
                    const: 'channel',
                    type: 'string',
                  },
                  {
                    const: 'business',
                    type: 'string',
                  },
                  {
                    const: 'unknown',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
    roleId: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    projectId: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    status: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'enabled',
              type: 'string',
            },
            {
              const: 'disabled',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'enabled',
                    type: 'string',
                  },
                  {
                    const: 'disabled',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
} as const

export const $UserSortBy = {
  type: 'object',
  properties: {
    age: {
      type: 'string',
      enum: ['asc', 'desc'],
    },
    id: {
      type: 'string',
      enum: ['asc', 'desc'],
    },
    createdAt: {
      type: 'string',
      default: 'asc',
      enum: ['asc', 'desc'],
    },
    updateAt: {
      type: 'string',
      enum: ['asc', 'desc'],
    },
  },
} as const

export const $UserPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/User',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $UserPermissionCreateInput = {
  type: 'object',
  properties: {
    expenditureType: {
      type: 'array',
      items: {
        type: 'string',
        enum: ['all', 'marketing', 'manage', 'developmentCost'],
      },
      description: '支出类型',
    },
    roleId: {
      type: 'number',
    },
    section: {
      type: 'string',
      enum: ['estate', 'architecture', 'channel', 'business', 'unknown'],
    },
    projectId: {
      type: 'number',
    },
    companyId: {
      type: 'number',
    },
  },
  required: ['roleId', 'section', 'projectId', 'companyId'],
} as const

export const $UserPermissionBatchCreateInput = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/UserPermissionCreateInput',
      },
    },
  },
  required: ['data'],
} as const

export const $ProjectFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    name: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    status: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'enabled',
              type: 'string',
            },
            {
              const: 'disabled',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'enabled',
                    type: 'string',
                  },
                  {
                    const: 'disabled',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
} as const

export const $Project = {
  type: 'object',
  properties: {
    section: {
      description: '板块',
      enum: ['estate', 'architecture', 'channel', 'business', 'unknown'],
      type: 'string',
    },
    name: {
      type: 'string',
      description: '名称',
    },
    status: {
      description: '是否启用',
      enum: ['enabled', 'disabled'],
      type: 'string',
    },
    companies: {
      type: 'object',
      default: [],
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.770Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.770Z',
    },
  },
  required: ['section', 'name', 'status', 'companies', 'id', 'createdAt', 'updatedAt'],
} as const

export const $ProjectPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/Project',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $ProjectCreateInput = {
  type: 'object',
  properties: {
    companyIds: {
      type: 'array',
      items: {
        type: 'number',
      },
    },
    section: {
      type: 'string',
      description: '板块',
      enum: ['estate', 'architecture', 'channel', 'business', 'unknown'],
    },
    name: {
      type: 'string',
      description: '名称',
    },
    status: {
      type: 'string',
      description: '是否启用',
      enum: ['enabled', 'disabled'],
    },
  },
  required: ['companyIds', 'section', 'name', 'status'],
} as const

export const $ProjectUpdateInput = {
  type: 'object',
  properties: {
    section: {
      type: 'string',
      description: '板块',
      enum: ['estate', 'architecture', 'channel', 'business', 'unknown'],
    },
    name: {
      type: 'string',
      description: '名称',
    },
    status: {
      type: 'string',
      description: '是否启用',
      enum: ['enabled', 'disabled'],
    },
    companyIds: {
      type: 'array',
      items: {
        type: 'number',
      },
    },
  },
} as const

export const $CompanyFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    name: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
  },
} as const

export const $Company = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
    },
    projects: {
      type: 'object',
      default: [],
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.774Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.774Z',
    },
  },
  required: ['name', 'projects', 'id', 'createdAt', 'updatedAt'],
} as const

export const $CompanyPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/Company',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $CompanyCreateInput = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
    },
  },
  required: ['name'],
} as const

export const $CompanyUpdateInput = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
    },
  },
} as const

export const $RoleFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    name: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    status: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'enabled',
              type: 'string',
            },
            {
              const: 'disabled',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'enabled',
                    type: 'string',
                  },
                  {
                    const: 'disabled',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
} as const

export const $Role = {
  type: 'object',
  properties: {
    features: {
      type: 'object',
    },
    name: {
      type: 'string',
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    status: {
      enum: ['enabled', 'disabled'],
      type: 'string',
    },
    description: {
      type: 'string',
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.778Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.778Z',
    },
  },
  required: ['features', 'name', 'status', 'id', 'createdAt', 'updatedAt'],
} as const

export const $RolePaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/Role',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $RoleCreateInput = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
    },
    features: {
      type: 'object',
    },
    status: {
      type: 'string',
      enum: ['enabled', 'disabled'],
    },
    description: {
      type: 'string',
    },
  },
  required: ['name', 'features', 'status'],
} as const

export const $RoleUpdateInput = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
    },
    features: {
      type: 'object',
    },
    status: {
      type: 'string',
      enum: ['enabled', 'disabled'],
    },
    description: {
      type: 'string',
    },
  },
} as const

export const $AccountFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    account: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    accountType: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'basic',
              type: 'string',
            },
            {
              const: 'general',
              type: 'string',
            },
            {
              const: 'commercialHousingPreSaleSupervision',
              type: 'string',
            },
            {
              const: 'mortgageDeposit',
              type: 'string',
            },
            {
              const: 'migrantWorkersWageDeposit',
              type: 'string',
            },
            {
              const: 'performanceBond',
              type: 'string',
            },
            {
              const: 'litigationFreezing',
              type: 'string',
            },
            {
              const: 'specialAccountForLoanRepayment',
              type: 'string',
            },
            {
              const: 'coManaged',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'basic',
                    type: 'string',
                  },
                  {
                    const: 'general',
                    type: 'string',
                  },
                  {
                    const: 'commercialHousingPreSaleSupervision',
                    type: 'string',
                  },
                  {
                    const: 'mortgageDeposit',
                    type: 'string',
                  },
                  {
                    const: 'migrantWorkersWageDeposit',
                    type: 'string',
                  },
                  {
                    const: 'performanceBond',
                    type: 'string',
                  },
                  {
                    const: 'litigationFreezing',
                    type: 'string',
                  },
                  {
                    const: 'specialAccountForLoanRepayment',
                    type: 'string',
                  },
                  {
                    const: 'coManaged',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
    bankName: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    status: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'enabled',
              type: 'string',
            },
            {
              const: 'disabled',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'enabled',
                    type: 'string',
                  },
                  {
                    const: 'disabled',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
    inUse: {
      anyOf: [
        {
          type: 'boolean',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'boolean',
              },
            },
          },
        },
      ],
    },
    nonProcess: {
      anyOf: [
        {
          type: 'boolean',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'boolean',
              },
            },
          },
        },
      ],
    },
    companyId: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    projectId: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    calculatedBookBalance: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    bookBalance: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    unavailableAmount: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    availableBalance: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    accountCategory: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'available',
              type: 'string',
            },
            {
              const: 'Unavailable',
              type: 'string',
            },
            {
              const: 'commercialHousingPreSaleSupervision',
              type: 'string',
            },
            {
              const: 'mortgageDeposit',
              type: 'string',
            },
            {
              const: 'migrantWorkersWageDeposit',
              type: 'string',
            },
            {
              const: 'performanceBond',
              type: 'string',
            },
            {
              const: 'litigationCases',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'available',
                    type: 'string',
                  },
                  {
                    const: 'Unavailable',
                    type: 'string',
                  },
                  {
                    const: 'commercialHousingPreSaleSupervision',
                    type: 'string',
                  },
                  {
                    const: 'mortgageDeposit',
                    type: 'string',
                  },
                  {
                    const: 'migrantWorkersWageDeposit',
                    type: 'string',
                  },
                  {
                    const: 'performanceBond',
                    type: 'string',
                  },
                  {
                    const: 'litigationCases',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
} as const

export const $Account = {
  type: 'object',
  properties: {
    project: {
      $ref: '#/components/schemas/Project',
    },
    company: {
      $ref: '#/components/schemas/Company',
    },
    account: {
      type: 'string',
    },
    bankName: {
      type: 'string',
    },
    accountType: {
      enum: [
        'basic',
        'general',
        'commercialHousingPreSaleSupervision',
        'mortgageDeposit',
        'migrantWorkersWageDeposit',
        'performanceBond',
        'litigationFreezing',
        'specialAccountForLoanRepayment',
        'coManaged',
      ],
      type: 'string',
    },
    accountCategory: {
      enum: [
        'available',
        'Unavailable',
        'commercialHousingPreSaleSupervision',
        'mortgageDeposit',
        'migrantWorkersWageDeposit',
        'performanceBond',
        'litigationCases',
      ],
      type: 'string',
    },
    status: {
      enum: ['enabled', 'disabled'],
      type: 'string',
    },
    description: {
      type: 'string',
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    inUse: {
      type: 'boolean',
      description: 'value=true时添加到账户底表',
    },
    nonProcess: {
      type: 'boolean',
      description: 'value=true时添加到非流程支出',
    },
    processedExpenseAmount: {
      type: 'object',
      description: '流程支出金额',
    },
    nonProcessedExpenseAmount: {
      type: 'object',
      description: '非流程支出金额',
    },
    incomeAmount: {
      type: 'object',
      description: '收入金额',
    },
    bookBalance: {
      type: 'object',
      description: '账面余额',
    },
    unavailableAmount: {
      type: 'object',
      description: '不可用资金',
    },
    availableBalance: {
      type: 'object',
      description: '可用余额',
    },
    calculatedBookBalance: {
      type: 'object',
      description: '收支表计算的账面余额',
    },
    detailDescription: {
      type: 'string',
      description: '资金明细备注',
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.785Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.785Z',
    },
  },
  required: [
    'company',
    'account',
    'bankName',
    'accountType',
    'status',
    'processedExpenseAmount',
    'nonProcessedExpenseAmount',
    'incomeAmount',
    'bookBalance',
    'unavailableAmount',
    'availableBalance',
    'calculatedBookBalance',
    'id',
    'createdAt',
    'updatedAt',
  ],
} as const

export const $AccountPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/Account',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $AccountCreateInput = {
  type: 'object',
  properties: {
    projectId: {
      type: 'number',
    },
    companyId: {
      type: 'number',
    },
    account: {
      type: 'string',
    },
    accountType: {
      type: 'string',
      enum: [
        'basic',
        'general',
        'commercialHousingPreSaleSupervision',
        'mortgageDeposit',
        'migrantWorkersWageDeposit',
        'performanceBond',
        'litigationFreezing',
        'specialAccountForLoanRepayment',
        'coManaged',
      ],
    },
    bankName: {
      type: 'string',
    },
    description: {
      type: 'string',
    },
    status: {
      type: 'string',
      enum: ['enabled', 'disabled'],
    },
    inUse: {
      type: 'boolean',
      description: 'value=true时添加到账户底表',
    },
  },
  required: ['companyId', 'account', 'accountType', 'bankName', 'status'],
} as const

export const $AccountUpdateInput = {
  type: 'object',
  properties: {
    account: {
      type: 'string',
    },
    accountType: {
      type: 'string',
      enum: [
        'basic',
        'general',
        'commercialHousingPreSaleSupervision',
        'mortgageDeposit',
        'migrantWorkersWageDeposit',
        'performanceBond',
        'litigationFreezing',
        'specialAccountForLoanRepayment',
        'coManaged',
      ],
    },
    bankName: {
      type: 'string',
    },
    description: {
      type: 'string',
    },
    status: {
      type: 'string',
      enum: ['enabled', 'disabled'],
    },
    inUse: {
      type: 'boolean',
      description: 'value=true时添加到账户底表',
    },
    projectId: {
      type: 'number',
    },
    companyId: {
      type: 'number',
    },
  },
} as const

export const $AccountIncomeFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    accountId: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    incomeType: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'house',
              type: 'string',
            },
            {
              const: 'bankInterest',
              type: 'string',
            },
            {
              const: 'contacts',
              type: 'string',
            },
            {
              const: 'otherFinancing',
              type: 'string',
            },
            {
              const: 'bankLoan',
              type: 'string',
            },
            {
              const: 'property',
              type: 'string',
            },
            {
              const: 'agency',
              type: 'string',
            },
            {
              const: 'project',
              type: 'string',
            },
            {
              const: 'parkingSpace',
              type: 'string',
            },
            {
              const: 'agencyForDocuments',
              type: 'string',
            },
            {
              const: 'rent',
              type: 'string',
            },
            {
              const: 'unknown',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'house',
                    type: 'string',
                  },
                  {
                    const: 'bankInterest',
                    type: 'string',
                  },
                  {
                    const: 'contacts',
                    type: 'string',
                  },
                  {
                    const: 'otherFinancing',
                    type: 'string',
                  },
                  {
                    const: 'bankLoan',
                    type: 'string',
                  },
                  {
                    const: 'property',
                    type: 'string',
                  },
                  {
                    const: 'agency',
                    type: 'string',
                  },
                  {
                    const: 'project',
                    type: 'string',
                  },
                  {
                    const: 'parkingSpace',
                    type: 'string',
                  },
                  {
                    const: 'agencyForDocuments',
                    type: 'string',
                  },
                  {
                    const: 'rent',
                    type: 'string',
                  },
                  {
                    const: 'unknown',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
    amount: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    date: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
  },
} as const

export const $AccountIncome = {
  type: 'object',
  properties: {
    date: {
      format: 'date-time',
      type: 'string',
      description: '收款日期',
    },
    amount: {
      type: 'string',
    },
    incomeType: {
      enum: [
        'house',
        'bankInterest',
        'contacts',
        'otherFinancing',
        'bankLoan',
        'property',
        'agency',
        'project',
        'parkingSpace',
        'agencyForDocuments',
        'rent',
        'unknown',
      ],
      type: 'string',
    },
    account: {
      $ref: '#/components/schemas/Account',
    },
    description: {
      type: 'string',
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.788Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.788Z',
    },
  },
  required: ['date', 'amount', 'incomeType', 'account', 'id', 'createdAt', 'updatedAt'],
} as const

export const $AccountIncomePaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/AccountIncome',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $AccountIncomeCreateInput = {
  type: 'object',
  properties: {
    accountId: {
      type: 'number',
    },
    incomeType: {
      type: 'string',
      enum: [
        'house',
        'bankInterest',
        'contacts',
        'otherFinancing',
        'bankLoan',
        'property',
        'agency',
        'project',
        'parkingSpace',
        'agencyForDocuments',
        'rent',
        'unknown',
      ],
    },
    description: {
      type: 'string',
    },
    amount: {
      type: 'string',
    },
    date: {
      format: 'date-time',
      type: 'string',
      description: '收款日期',
    },
  },
  required: ['accountId', 'incomeType', 'amount', 'date'],
} as const

export const $AccountIncomeUpdateInput = {
  type: 'object',
  properties: {
    incomeType: {
      type: 'string',
      enum: [
        'house',
        'bankInterest',
        'contacts',
        'otherFinancing',
        'bankLoan',
        'property',
        'agency',
        'project',
        'parkingSpace',
        'agencyForDocuments',
        'rent',
        'unknown',
      ],
    },
    description: {
      type: 'string',
    },
    amount: {
      type: 'string',
    },
    date: {
      format: 'date-time',
      type: 'string',
      description: '收款日期',
    },
    accountId: {
      type: 'number',
    },
  },
} as const

export const $ProjectExpensePlanFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    projectId: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    mingyId: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    toAccount: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    appliedForDepartment: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    applicant: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    processStatus: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'pending',
              type: 'string',
            },
            {
              const: 'processing',
              type: 'string',
            },
            {
              const: 'pass',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'pending',
                    type: 'string',
                  },
                  {
                    const: 'processing',
                    type: 'string',
                  },
                  {
                    const: 'pass',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
} as const

export const $ExpensePlan = {
  type: 'object',
  properties: {
    project: {
      description: '明源项目',
      allOf: [
        {
          $ref: '#/components/schemas/Project',
        },
      ],
    },
    company: {
      description: '付款单位',
      allOf: [
        {
          $ref: '#/components/schemas/Company',
        },
      ],
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    mingyId: {
      type: 'string',
      description: '明源编号',
    },
    processStatus: {
      description: '流程状态',
      enum: ['pending', 'processing', 'pass'],
      type: 'string',
    },
    actuallyPaymentAmount: {
      type: 'string',
      description: '实际付款合计',
    },
    verificationAmount: {
      type: 'string',
      description: '核销金额合计',
    },
    plannedPaymentAmount: {
      type: 'string',
      description: '计划付款金额合计',
    },
    unPlannedPaymentAmount: {
      type: 'string',
      description: '未计划付款金额合计',
    },
    processedUnpaidAmount: {
      type: 'string',
      description: '流程待付款金额',
    },
    unpaidAmount: {
      type: 'string',
      description: '未付款金额',
    },
    toCompany: {
      type: 'string',
      description: '收款人/收款单位',
    },
    toAccount: {
      type: 'string',
      description: '收款账号',
    },
    actuallyToAccount: {
      type: 'string',
      description: '实际收款账号',
    },
    amountToPaid: {
      type: 'string',
      description: '应付金额',
    },
    applicant: {
      type: 'string',
      description: '申请人',
    },
    appliedForDepartment: {
      type: 'string',
      description: '申请部门',
    },
    appliedForReason: {
      type: 'string',
      description: '申请事由',
    },
    constructionCompany: {
      type: 'string',
      description: '施工单位',
    },
    reason: {
      type: 'string',
      description: '原因',
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.791Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.791Z',
    },
  },
  required: [
    'project',
    'company',
    'mingyId',
    'processStatus',
    'toCompany',
    'toAccount',
    'amountToPaid',
    'applicant',
    'appliedForDepartment',
    'appliedForReason',
    'constructionCompany',
    'id',
    'createdAt',
    'updatedAt',
  ],
} as const

export const $ProjectExpensePlan = {
  type: 'object',
  properties: {
    project: {
      description: '明源项目',
      allOf: [
        {
          $ref: '#/components/schemas/Project',
        },
      ],
    },
    company: {
      description: '付款单位',
      allOf: [
        {
          $ref: '#/components/schemas/Company',
        },
      ],
    },
    expensePlan: {
      $ref: '#/components/schemas/ExpensePlan',
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    toCompany: {
      type: 'string',
      description: '收款人/收款单位',
    },
    toAccount: {
      type: 'string',
      description: '收款账号',
    },
    actuallyToAccount: {
      type: 'string',
      description: '实际收款账号',
    },
    amountToPaid: {
      type: 'string',
      description: '应付金额',
    },
    applicant: {
      type: 'string',
      description: '申请人',
    },
    appliedForDepartment: {
      type: 'string',
      description: '申请部门',
    },
    appliedForReason: {
      type: 'string',
      description: '申请事由',
    },
    constructionCompany: {
      type: 'string',
      description: '施工单位',
    },
    reason: {
      type: 'string',
      description: '原因',
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.791Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.791Z',
    },
  },
  required: [
    'project',
    'company',
    'toCompany',
    'toAccount',
    'amountToPaid',
    'applicant',
    'appliedForDepartment',
    'appliedForReason',
    'constructionCompany',
    'id',
    'createdAt',
    'updatedAt',
  ],
} as const

export const $ProjectExpensePlanPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/ProjectExpensePlan',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $ProjectExpensePlanCreateInput = {
  type: 'object',
  properties: {
    projectId: {
      type: 'number',
    },
    companyId: {
      type: 'number',
    },
    mingyId: {
      type: 'string',
    },
    applicant: {
      type: 'string',
      description: '申请人',
    },
    actuallyToAccount: {
      type: 'string',
      description: '实际收款账号',
    },
    appliedForDepartment: {
      type: 'string',
      description: '申请部门',
    },
    appliedForReason: {
      type: 'string',
      description: '申请事由',
    },
    constructionCompany: {
      type: 'string',
      description: '施工单位',
    },
    toAccount: {
      type: 'string',
      description: '收款账号',
    },
    toCompany: {
      type: 'string',
      description: '收款人/收款单位',
    },
    reason: {
      type: 'string',
      description: '原因',
    },
    amountToPaid: {
      type: 'string',
      description: '应付金额',
    },
  },
  required: [
    'projectId',
    'companyId',
    'applicant',
    'appliedForDepartment',
    'appliedForReason',
    'constructionCompany',
    'toAccount',
    'toCompany',
    'amountToPaid',
  ],
} as const

export const $ProjectExpensePlanUpdateInput = {
  type: 'object',
  properties: {
    applicant: {
      type: 'string',
      description: '申请人',
    },
    actuallyToAccount: {
      type: 'string',
      description: '实际收款账号',
    },
    appliedForDepartment: {
      type: 'string',
      description: '申请部门',
    },
    appliedForReason: {
      type: 'string',
      description: '申请事由',
    },
    constructionCompany: {
      type: 'string',
      description: '施工单位',
    },
    toAccount: {
      type: 'string',
      description: '收款账号',
    },
    toCompany: {
      type: 'string',
      description: '收款人/收款单位',
    },
    reason: {
      type: 'string',
      description: '原因',
    },
    amountToPaid: {
      type: 'string',
      description: '应付金额',
    },
    projectId: {
      type: 'number',
    },
    companyId: {
      type: 'number',
    },
    mingyId: {
      type: 'string',
    },
  },
} as const

export const $ExpensePlanFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    projectId: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    mingyId: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    toAccount: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    appliedForDepartment: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    applicant: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    processStatus: {
      anyOf: [
        {
          anyOf: [
            {
              const: 'pending',
              type: 'string',
            },
            {
              const: 'processing',
              type: 'string',
            },
            {
              const: 'pass',
              type: 'string',
            },
          ],
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                anyOf: [
                  {
                    const: 'pending',
                    type: 'string',
                  },
                  {
                    const: 'processing',
                    type: 'string',
                  },
                  {
                    const: 'pass',
                    type: 'string',
                  },
                ],
              },
            },
          },
        },
      ],
    },
  },
} as const

export const $ExpensePlanPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/ExpensePlan',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $ExpensePlanUpdateInput = {
  type: 'object',
  properties: {
    reason: {
      type: 'string',
      description: '原因',
    },
    actuallyToAccount: {
      type: 'string',
      description: '实际收款账号',
    },
    constructionCompany: {
      type: 'string',
      description: '施工单位',
    },
  },
} as const

export const $PaymentPlanFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    plannedPaymentAmount: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'string',
            },
            $lt: {
              type: 'string',
            },
            $gte: {
              type: 'string',
            },
            $lte: {
              type: 'string',
            },
          },
        },
      ],
    },
    unpaidAmount: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'string',
            },
            $lt: {
              type: 'string',
            },
            $gte: {
              type: 'string',
            },
            $lte: {
              type: 'string',
            },
          },
        },
      ],
    },
    planDate: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    confirmed: {
      anyOf: [
        {
          type: 'boolean',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'boolean',
              },
            },
          },
        },
      ],
    },
    expensePlanId: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
  },
} as const

export const $PaymentPlan = {
  type: 'object',
  properties: {
    expensePlanId: {
      type: 'number',
    },
    projectExpensePlanId: {
      type: 'number',
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    expenseTypeId: {
      type: 'number',
      description: '支出类别',
    },
    plannedPaymentAmount: {
      type: 'string',
      description: '计划付款金额',
    },
    verification: {
      type: 'boolean',
      description: '是否核销',
    },
    verificationAmount: {
      type: 'string',
      description: '核销金额',
    },
    verificationReason: {
      type: 'string',
      description: '核销原因',
    },
    planDate: {
      format: 'date-time',
      type: 'string',
      description: '计划日期',
    },
    confirmed: {
      type: 'object',
      description: '是否确认计划',
      default: false,
    },
    actuallyPaymentAmount: {
      type: 'object',
      description: '实际支付金额',
      default: '0.000',
    },
    unpaidAmount: {
      type: 'object',
      description: '未付款金额',
      default: '0.000',
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.795Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.795Z',
    },
  },
  required: [
    'expensePlanId',
    'plannedPaymentAmount',
    'verification',
    'planDate',
    'confirmed',
    'actuallyPaymentAmount',
    'unpaidAmount',
    'id',
    'createdAt',
    'updatedAt',
  ],
} as const

export const $PaymentPlanPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/PaymentPlan',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $PaymentPlanCreateInput = {
  type: 'object',
  properties: {
    planDate: {
      format: 'date-time',
      type: 'string',
      description: '计划日期',
    },
    verification: {
      type: 'boolean',
      description: '是否核销',
    },
    verificationAmount: {
      type: 'string',
      description: '核销金额',
    },
    verificationReason: {
      type: 'string',
      description: '核销原因',
    },
    projectExpensePlanId: {
      type: 'number',
    },
    expenseTypeId: {
      type: 'number',
      description: '支出类别',
    },
    plannedPaymentAmount: {
      type: 'string',
      description: '计划付款金额',
    },
  },
  required: ['planDate', 'verification', 'plannedPaymentAmount'],
} as const

export const $PaymentPlanBatchConfirmedInput = {
  type: 'object',
  properties: {
    ids: {
      type: 'array',
      items: {
        type: 'number',
      },
    },
  },
  required: ['ids'],
} as const

export const $PaymentPlanUpdateInput = {
  type: 'object',
  properties: {
    planDate: {
      format: 'date-time',
      type: 'string',
      description: '计划日期',
    },
    verification: {
      type: 'boolean',
      description: '是否核销',
    },
    verificationAmount: {
      type: 'string',
      description: '核销金额',
    },
    verificationReason: {
      type: 'string',
      description: '核销原因',
    },
    projectExpensePlanId: {
      type: 'number',
    },
    expenseTypeId: {
      type: 'number',
      description: '支出类别',
    },
    plannedPaymentAmount: {
      type: 'string',
      description: '计划付款金额',
    },
  },
} as const

export const $ActuallyPaymentFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
  },
} as const

export const $ActuallyPayment = {
  type: 'object',
  properties: {
    account: {
      $ref: '#/components/schemas/Account',
    },
    expensePlanId: {
      type: 'number',
    },
    paymentPlanId: {
      type: 'number',
    },
    expenseTypeId: {
      type: 'number',
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    paymentAmount: {
      type: 'string',
      description: '付款金额',
    },
    paymentDate: {
      format: 'date-time',
      type: 'string',
      description: '付款日期',
    },
    description: {
      type: 'string',
      description: '备注',
    },
    confirmed: {
      type: 'boolean',
      description: '是否确认付款',
      default: false,
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.798Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.798Z',
    },
  },
  required: [
    'account',
    'expensePlanId',
    'paymentPlanId',
    'paymentAmount',
    'paymentDate',
    'confirmed',
    'id',
    'createdAt',
    'updatedAt',
  ],
} as const

export const $ActuallyPaymentPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/ActuallyPayment',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $ActuallyPaymentCreateInput = {
  type: 'object',
  properties: {
    accountId: {
      type: 'number',
    },
    description: {
      type: 'string',
      description: '备注',
    },
    paymentDate: {
      format: 'date-time',
      type: 'string',
      description: '付款日期',
    },
    paymentAmount: {
      type: 'string',
      description: '付款金额',
    },
  },
  required: ['accountId', 'paymentDate', 'paymentAmount'],
} as const

export const $ActuallyPaymentUpdateInput = {
  type: 'object',
  properties: {
    description: {
      type: 'string',
      description: '备注',
    },
    paymentDate: {
      format: 'date-time',
      type: 'string',
      description: '付款日期',
    },
    paymentAmount: {
      type: 'string',
      description: '付款金额',
    },
    accountId: {
      type: 'number',
    },
  },
} as const

export const $NonProcessExpenseFilter = {
  type: 'object',
  properties: {
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    updatedBy: {
      anyOf: [
        {
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $like: {
              type: 'string',
            },
            $in: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
    updatedAt: {
      anyOf: [
        {
          type: 'Date',
        },
        {
          type: 'object',
          properties: {
            $gt: {
              type: 'Date',
            },
            $lt: {
              type: 'Date',
            },
            $gte: {
              type: 'Date',
            },
            $lte: {
              type: 'Date',
            },
          },
        },
      ],
    },
  },
} as const

export const $NonProcessExpense = {
  type: 'object',
  properties: {
    account: {
      $ref: '#/components/schemas/Account',
    },
    createdBy: {
      description: '创建人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    updatedBy: {
      description: '最后更新的人',
      allOf: [
        {
          $ref: '#/components/schemas/User',
        },
      ],
    },
    paymentAmount: {
      type: 'string',
      description: '付款金额',
    },
    expenseTypeId: {
      type: 'number',
      description: '支出类别',
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.800Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.800Z',
    },
  },
  required: ['account', 'paymentAmount', 'id', 'createdAt', 'updatedAt'],
} as const

export const $NonProcessExpensePaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/NonProcessExpense',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $NonProcessExpenseCreateInput = {
  type: 'object',
  properties: {
    id: {
      type: 'number',
      description: '有id为编辑，没有id是新增',
    },
    paymentAmount: {
      type: 'string',
      description: '付款金额',
    },
    expenseTypeId: {
      type: 'number',
      description: '支出类别',
    },
  },
  required: ['paymentAmount'],
} as const

export const $NonProcessExpenseSaveInput = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/NonProcessExpenseCreateInput',
      },
    },
    deletedIds: {
      type: 'array',
      items: {
        type: 'number',
      },
    },
  },
  required: ['data'],
} as const

export const $ExpenseType = {
  type: 'object',
  properties: {
    createdBy: {
      type: 'number',
      description: '创建人',
    },
    updatedBy: {
      type: 'number',
      description: '最后更新的人',
    },
    name: {
      type: 'string',
      description: '名称',
    },
    parentId: {
      type: 'number',
      description: '上级id',
    },
    path: {
      type: 'array',
      items: {
        type: 'number',
      },
    },
    code: {
      type: 'string',
      description: '科目代码',
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.801Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.801Z',
    },
  },
  required: ['name', 'code', 'id', 'createdAt', 'updatedAt'],
} as const

export const $ExpenseTypePaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/ExpenseType',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $PresaleSupervisionFundsDetail = {
  type: 'object',
  properties: {
    createdBy: {
      type: 'number',
      description: '创建人',
    },
    updatedBy: {
      type: 'number',
      description: '最后更新的人',
    },
    project: {
      $ref: '#/components/schemas/Project',
    },
    name: {
      type: 'string',
      description: '批次名称',
    },
    supervisionAmount: {
      type: 'string',
      description: '预售监管额度',
    },
    reserveAmount: {
      type: 'string',
      description: '留存额度',
    },
    buildingsWithPresaleCertificate: {
      type: 'string',
      description: '预售证对应楼栋',
    },
    accordingToConstructionProgress: {
      type: 'string',
      description: '按施工进度(封顶)',
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.802Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.802Z',
    },
  },
  required: [
    'project',
    'name',
    'supervisionAmount',
    'reserveAmount',
    'buildingsWithPresaleCertificate',
    'accordingToConstructionProgress',
    'id',
    'createdAt',
    'updatedAt',
  ],
} as const

export const $PresaleSupervisionFundsDetailPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/PresaleSupervisionFundsDetail',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $PresaleSupervisionFundsDetailCreateInput = {
  type: 'object',
  properties: {
    id: {
      type: 'number',
      description: '有id为编辑，没有id是新增',
    },
    accordingToConstructionProgress: {
      type: 'string',
      description: '按施工进度(封顶)',
    },
    buildingsWithPresaleCertificate: {
      type: 'string',
      description: '预售证对应楼栋',
    },
    reserveAmount: {
      type: 'string',
      description: '留存额度',
    },
    supervisionAmount: {
      type: 'string',
      description: '预售监管额度',
    },
    name: {
      type: 'string',
      description: '批次名称',
    },
  },
  required: [
    'accordingToConstructionProgress',
    'buildingsWithPresaleCertificate',
    'reserveAmount',
    'supervisionAmount',
    'name',
  ],
} as const

export const $PresaleSupervisionFundsDetailSaveInput = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/PresaleSupervisionFundsDetailCreateInput',
      },
    },
    deletedIds: {
      type: 'array',
      items: {
        type: 'number',
      },
    },
  },
  required: ['data'],
} as const

export const $PresaleSupervisionWithdrawableFundsDetail = {
  type: 'object',
  properties: {
    createdBy: {
      type: 'number',
      description: '创建人',
    },
    updatedBy: {
      type: 'number',
      description: '最后更新的人',
    },
    project: {
      $ref: '#/components/schemas/Project',
    },
    name: {
      type: 'string',
      description: '批次名称',
    },
    account: {
      type: 'string',
      description: '账号',
    },
    accountBalance: {
      type: 'string',
      description: '账户余额',
    },
    reserveAmount: {
      type: 'string',
      description: '监管协议应留存金额',
    },
    quarterlyInterestIncome: {
      type: 'string',
      description: '季度利息收入',
    },
    calculatedAmountWithdraw: {
      type: 'string',
      description: '推算应提取金额',
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      description: '创建时间',
      default: '2024-10-10T03:09:06.803Z',
    },
    updatedAt: {
      type: 'object',
      description: '最后更新时间',
      default: '2024-10-10T03:09:06.803Z',
    },
  },
  required: [
    'project',
    'name',
    'account',
    'accountBalance',
    'reserveAmount',
    'quarterlyInterestIncome',
    'calculatedAmountWithdraw',
    'id',
    'createdAt',
    'updatedAt',
  ],
} as const

export const $PresaleSupervisionWithdrawableFundsDetailPaginationResult = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/PresaleSupervisionWithdrawableFundsDetail',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const

export const $PresaleSupervisionWithdrawableFundsDetailCreateInput = {
  type: 'object',
  properties: {
    id: {
      type: 'number',
      description: '有id为编辑，没有id是新增',
    },
    account: {
      type: 'string',
      description: '账号',
    },
    accountBalance: {
      type: 'string',
      description: '账户余额',
    },
    reserveAmount: {
      type: 'string',
      description: '监管协议应留存金额',
    },
    calculatedAmountWithdraw: {
      type: 'string',
      description: '推算应提取金额',
    },
    name: {
      type: 'string',
      description: '批次名称',
    },
    quarterlyInterestIncome: {
      type: 'string',
      description: '季度利息收入',
    },
  },
  required: [
    'account',
    'accountBalance',
    'reserveAmount',
    'calculatedAmountWithdraw',
    'name',
    'quarterlyInterestIncome',
  ],
} as const

export const $PresaleSupervisionWithdrawableFundsDetailSaveInput = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/PresaleSupervisionWithdrawableFundsDetailCreateInput',
      },
    },
    deletedIds: {
      type: 'array',
      items: {
        type: 'number',
      },
    },
  },
  required: ['data'],
} as const
