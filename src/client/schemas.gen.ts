// This file is auto-generated by @hey-api/openapi-ts

export const $BaseFilter = {
  type: 'object',
  properties: {
    $and: {
      description: 'and查询',
      type: 'array',
      items: {
        $ref: '#/components/schemas/BaseFilter',
      },
    },
    $or: {
      description: 'or查询',
      type: 'array',
      items: {
        $ref: '#/components/schemas/BaseFilter',
      },
    },
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $eq: {
              type: 'number',
            },
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          format: 'date-time',
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                format: 'date-time',
                type: 'string',
              },
            },
            $eq: {
              format: 'date-time',
              type: 'string',
            },
            $like: {
              format: 'date-time',
              type: 'string',
            },
            $gt: {
              format: 'date-time',
              type: 'string',
            },
            $gte: {
              format: 'date-time',
              type: 'string',
            },
            $lte: {
              format: 'date-time',
              type: 'string',
            },
            $lt: {
              format: 'date-time',
              type: 'string',
            },
          },
        },
      ],
    },
    updateAt: {
      anyOf: [
        {
          format: 'date-time',
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                format: 'date-time',
                type: 'string',
              },
            },
            $eq: {
              format: 'date-time',
              type: 'string',
            },
            $like: {
              format: 'date-time',
              type: 'string',
            },
            $gt: {
              format: 'date-time',
              type: 'string',
            },
            $gte: {
              format: 'date-time',
              type: 'string',
            },
            $lte: {
              format: 'date-time',
              type: 'string',
            },
            $lt: {
              format: 'date-time',
              type: 'string',
            },
          },
        },
      ],
    },
  },
} as const

export const $UserFilter = {
  type: 'object',
  properties: {
    $and: {
      description: 'and查询',
      type: 'array',
      items: {
        $ref: '#/components/schemas/BaseFilter',
      },
    },
    $or: {
      description: 'or查询',
      type: 'array',
      items: {
        $ref: '#/components/schemas/BaseFilter',
      },
    },
    id: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $eq: {
              type: 'number',
            },
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
          },
        },
      ],
    },
    createdAt: {
      anyOf: [
        {
          format: 'date-time',
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                format: 'date-time',
                type: 'string',
              },
            },
            $eq: {
              format: 'date-time',
              type: 'string',
            },
            $like: {
              format: 'date-time',
              type: 'string',
            },
            $gt: {
              format: 'date-time',
              type: 'string',
            },
            $gte: {
              format: 'date-time',
              type: 'string',
            },
            $lte: {
              format: 'date-time',
              type: 'string',
            },
            $lt: {
              format: 'date-time',
              type: 'string',
            },
          },
        },
      ],
    },
    updateAt: {
      anyOf: [
        {
          format: 'date-time',
          type: 'string',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                format: 'date-time',
                type: 'string',
              },
            },
            $eq: {
              format: 'date-time',
              type: 'string',
            },
            $like: {
              format: 'date-time',
              type: 'string',
            },
            $gt: {
              format: 'date-time',
              type: 'string',
            },
            $gte: {
              format: 'date-time',
              type: 'string',
            },
            $lte: {
              format: 'date-time',
              type: 'string',
            },
            $lt: {
              format: 'date-time',
              type: 'string',
            },
          },
        },
      ],
    },
    age: {
      anyOf: [
        {
          type: 'number',
        },
        {
          type: 'object',
          properties: {
            $in: {
              type: 'array',
              items: {
                type: 'number',
              },
            },
            $eq: {
              type: 'number',
            },
            $like: {
              type: 'number',
            },
            $gt: {
              type: 'number',
            },
            $gte: {
              type: 'number',
            },
            $lte: {
              type: 'number',
            },
            $lt: {
              type: 'number',
            },
          },
        },
      ],
    },
    account: {
      type: 'object',
    },
  },
} as const

export const $UserOrderBy = {
  type: 'object',
  properties: {
    age: {
      type: 'string',
      enum: ['asc', 'desc'],
    },
    id: {
      type: 'string',
      enum: ['asc', 'desc'],
    },
    createdAt: {
      type: 'string',
      default: 'asc',
      enum: ['asc', 'desc'],
    },
    updateAt: {
      type: 'string',
      enum: ['asc', 'desc'],
    },
  },
} as const

export const $Role = {
  type: 'object',
  properties: {
    id: {
      type: 'number',
    },
    name: {
      type: 'string',
    },
  },
  required: ['id', 'name'],
} as const

export const $User = {
  type: 'object',
  properties: {
    username: {
      type: 'string',
    },
    email: {
      type: 'string',
    },
    role: {
      $ref: '#/components/schemas/Role',
    },
    roles: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/Role',
      },
    },
    id: {
      type: 'number',
    },
    createdAt: {
      type: 'object',
      default: '2024-08-27T03:01:20.490Z',
    },
    updatedAt: {
      type: 'object',
      default: '2024-08-27T03:01:20.490Z',
    },
    createdBy: {
      type: 'number',
    },
    updatedBy: {
      type: 'number',
    },
  },
  required: ['username', 'email', 'id', 'createdAt', 'updatedAt'],
} as const

export const $Result = {
  type: 'object',
  properties: {
    data: {
      type: 'array',
      items: {
        $ref: '#/components/schemas/User',
      },
    },
    total: {
      type: 'number',
    },
  },
  required: ['data', 'total'],
} as const
