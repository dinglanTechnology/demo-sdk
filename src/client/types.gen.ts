// This file is auto-generated by @hey-api/openapi-ts

export type User = {
  /**
   * 创建人
   */
  createdBy?: number
  /**
   * 最后更新的人
   */
  updatedBy?: number
  weworkUserId: string
  phone: string
  name: string
  status: 'enabled' | 'disabled'
  userPermissions: {
    [key: string]: unknown
  }
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type status = 'enabled' | 'disabled'

export const status = {
  ENABLED: 'enabled',
  DISABLED: 'disabled',
} as const

export type WeworkLoginInput = {
  /**
   * 企业微信授权所需的code
   */
  code: string
}

export type LoginResult = {
  /**
   * 需要加在request header里面, 格式大概如下 Authorization: Bearer ${token}
   */
  token: string
}

export type UserFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  name?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  section?:
    | ('estate' | 'architecture' | 'channel' | 'business' | 'unknown')
    | {
        $in?: Array<'estate' | 'architecture' | 'channel' | 'business' | 'unknown'>
      }
  roleId?:
    | number
    | {
        $in?: Array<number>
      }
  projectId?:
    | number
    | {
        $in?: Array<number>
      }
  status?:
    | ('enabled' | 'disabled')
    | {
        $in?: Array<'enabled' | 'disabled'>
      }
}

export type UserSortBy = {
  age?: 'asc' | 'desc'
  id?: 'asc' | 'desc'
  createdAt?: 'asc' | 'desc'
  updateAt?: 'asc' | 'desc'
}

export type age = 'asc' | 'desc'

export const age = {
  ASC: 'asc',
  DESC: 'desc',
} as const

export type id = 'asc' | 'desc'

export const id = {
  ASC: 'asc',
  DESC: 'desc',
} as const

export type createdAt = 'asc' | 'desc'

export const createdAt = {
  ASC: 'asc',
  DESC: 'desc',
} as const

export type updateAt = 'asc' | 'desc'

export const updateAt = {
  ASC: 'asc',
  DESC: 'desc',
} as const

export type UserPaginationResult = {
  data: Array<User>
  total: number
}

export type UserPermissionCreateInput = {
  /**
   * 支出类型
   */
  expenditureType?: Array<'all' | 'marketing' | 'manage' | 'developmentCost'>
  roleId: number
  section: 'estate' | 'architecture' | 'channel' | 'business' | 'unknown'
  projectId: number
  companyId: number
}

export type section = 'estate' | 'architecture' | 'channel' | 'business' | 'unknown'

export const section = {
  ESTATE: 'estate',
  ARCHITECTURE: 'architecture',
  CHANNEL: 'channel',
  BUSINESS: 'business',
  UNKNOWN: 'unknown',
} as const

export type UserPermissionBatchCreateInput = {
  data: Array<UserPermissionCreateInput>
}

export type ProjectFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  name?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  status?:
    | ('enabled' | 'disabled')
    | {
        $in?: Array<'enabled' | 'disabled'>
      }
}

export type Project = {
  /**
   * 板块
   */
  section: 'estate' | 'architecture' | 'channel' | 'business' | 'unknown'
  /**
   * 名称
   */
  name: string
  /**
   * 是否启用
   */
  status: 'enabled' | 'disabled'
  companies: {
    [key: string]: unknown
  }
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type ProjectPaginationResult = {
  data: Array<Project>
  total: number
}

export type ProjectCreateInput = {
  companyIds: Array<number>
  /**
   * 板块
   */
  section: 'estate' | 'architecture' | 'channel' | 'business' | 'unknown'
  /**
   * 名称
   */
  name: string
  /**
   * 是否启用
   */
  status: 'enabled' | 'disabled'
}

export type ProjectUpdateInput = {
  /**
   * 板块
   */
  section?: 'estate' | 'architecture' | 'channel' | 'business' | 'unknown'
  /**
   * 名称
   */
  name?: string
  /**
   * 是否启用
   */
  status?: 'enabled' | 'disabled'
  companyIds?: Array<number>
}

export type CompanyFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  name?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
}

export type Company = {
  name: string
  projects: {
    [key: string]: unknown
  }
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type CompanyPaginationResult = {
  data: Array<Company>
  total: number
}

export type CompanyCreateInput = {
  name: string
}

export type CompanyUpdateInput = {
  name?: string
}

export type RoleFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  name?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  status?:
    | ('enabled' | 'disabled')
    | {
        $in?: Array<'enabled' | 'disabled'>
      }
}

export type Role = {
  features: {
    [key: string]: unknown
  }
  name: string
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  status: 'enabled' | 'disabled'
  description?: string
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type RolePaginationResult = {
  data: Array<Role>
  total: number
}

export type RoleCreateInput = {
  name: string
  features: {
    [key: string]: unknown
  }
  status: 'enabled' | 'disabled'
  description?: string
}

export type RoleUpdateInput = {
  name?: string
  features?: {
    [key: string]: unknown
  }
  status?: 'enabled' | 'disabled'
  description?: string
}

export type AccountFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  account?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  accountType?:
    | (
        | 'basic'
        | 'general'
        | 'commercialHousingPreSaleSupervision'
        | 'mortgageDeposit'
        | 'migrantWorkersWageDeposit'
        | 'performanceBond'
        | 'litigationFreezing'
        | 'specialAccountForLoanRepayment'
        | 'coManaged'
      )
    | {
        $in?: Array<
          | 'basic'
          | 'general'
          | 'commercialHousingPreSaleSupervision'
          | 'mortgageDeposit'
          | 'migrantWorkersWageDeposit'
          | 'performanceBond'
          | 'litigationFreezing'
          | 'specialAccountForLoanRepayment'
          | 'coManaged'
        >
      }
  bankName?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  status?:
    | ('enabled' | 'disabled')
    | {
        $in?: Array<'enabled' | 'disabled'>
      }
  inUse?:
    | boolean
    | {
        $in?: Array<boolean>
      }
  nonProcess?:
    | boolean
    | {
        $in?: Array<boolean>
      }
  companyId?:
    | number
    | {
        $in?: Array<number>
      }
  projectId?:
    | number
    | {
        $in?: Array<number>
      }
  calculatedBookBalance?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  bookBalance?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  unavailableAmount?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  availableBalance?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  accountCategory?:
    | (
        | 'available'
        | 'Unavailable'
        | 'commercialHousingPreSaleSupervision'
        | 'mortgageDeposit'
        | 'migrantWorkersWageDeposit'
        | 'performanceBond'
        | 'litigationCases'
      )
    | {
        $in?: Array<
          | 'available'
          | 'Unavailable'
          | 'commercialHousingPreSaleSupervision'
          | 'mortgageDeposit'
          | 'migrantWorkersWageDeposit'
          | 'performanceBond'
          | 'litigationCases'
        >
      }
}

export type Account = {
  project?: Project
  company: Company
  account: string
  bankName: string
  accountType:
    | 'basic'
    | 'general'
    | 'commercialHousingPreSaleSupervision'
    | 'mortgageDeposit'
    | 'migrantWorkersWageDeposit'
    | 'performanceBond'
    | 'litigationFreezing'
    | 'specialAccountForLoanRepayment'
    | 'coManaged'
  accountCategory?:
    | 'available'
    | 'Unavailable'
    | 'commercialHousingPreSaleSupervision'
    | 'mortgageDeposit'
    | 'migrantWorkersWageDeposit'
    | 'performanceBond'
    | 'litigationCases'
  status: 'enabled' | 'disabled'
  description?: string
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  /**
   * value=true时添加到账户底表
   */
  inUse?: boolean
  /**
   * value=true时添加到非流程支出
   */
  nonProcess?: boolean
  /**
   * 流程支出金额
   */
  processedExpenseAmount: {
    [key: string]: unknown
  }
  /**
   * 非流程支出金额
   */
  nonProcessedExpenseAmount: {
    [key: string]: unknown
  }
  /**
   * 收入金额
   */
  incomeAmount: {
    [key: string]: unknown
  }
  /**
   * 账面余额
   */
  bookBalance: {
    [key: string]: unknown
  }
  /**
   * 不可用资金
   */
  unavailableAmount: {
    [key: string]: unknown
  }
  /**
   * 可用余额
   */
  availableBalance: {
    [key: string]: unknown
  }
  /**
   * 收支表计算的账面余额
   */
  calculatedBookBalance: {
    [key: string]: unknown
  }
  /**
   * 资金明细备注
   */
  detailDescription?: string
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type accountType =
  | 'basic'
  | 'general'
  | 'commercialHousingPreSaleSupervision'
  | 'mortgageDeposit'
  | 'migrantWorkersWageDeposit'
  | 'performanceBond'
  | 'litigationFreezing'
  | 'specialAccountForLoanRepayment'
  | 'coManaged'

export const accountType = {
  BASIC: 'basic',
  GENERAL: 'general',
  COMMERCIAL_HOUSING_PRE_SALE_SUPERVISION: 'commercialHousingPreSaleSupervision',
  MORTGAGE_DEPOSIT: 'mortgageDeposit',
  MIGRANT_WORKERS_WAGE_DEPOSIT: 'migrantWorkersWageDeposit',
  PERFORMANCE_BOND: 'performanceBond',
  LITIGATION_FREEZING: 'litigationFreezing',
  SPECIAL_ACCOUNT_FOR_LOAN_REPAYMENT: 'specialAccountForLoanRepayment',
  CO_MANAGED: 'coManaged',
} as const

export type accountCategory =
  | 'available'
  | 'Unavailable'
  | 'commercialHousingPreSaleSupervision'
  | 'mortgageDeposit'
  | 'migrantWorkersWageDeposit'
  | 'performanceBond'
  | 'litigationCases'

export const accountCategory = {
  AVAILABLE: 'available',
  UNAVAILABLE: 'Unavailable',
  COMMERCIAL_HOUSING_PRE_SALE_SUPERVISION: 'commercialHousingPreSaleSupervision',
  MORTGAGE_DEPOSIT: 'mortgageDeposit',
  MIGRANT_WORKERS_WAGE_DEPOSIT: 'migrantWorkersWageDeposit',
  PERFORMANCE_BOND: 'performanceBond',
  LITIGATION_CASES: 'litigationCases',
} as const

export type AccountPaginationResult = {
  data: Array<Account>
  total: number
}

export type AccountCreateInput = {
  projectId?: number
  companyId: number
  account: string
  accountType:
    | 'basic'
    | 'general'
    | 'commercialHousingPreSaleSupervision'
    | 'mortgageDeposit'
    | 'migrantWorkersWageDeposit'
    | 'performanceBond'
    | 'litigationFreezing'
    | 'specialAccountForLoanRepayment'
    | 'coManaged'
  bankName: string
  description?: string
  status: 'enabled' | 'disabled'
  /**
   * value=true时添加到账户底表
   */
  inUse?: boolean
}

export type AccountUpdateInput = {
  account?: string
  accountType?:
    | 'basic'
    | 'general'
    | 'commercialHousingPreSaleSupervision'
    | 'mortgageDeposit'
    | 'migrantWorkersWageDeposit'
    | 'performanceBond'
    | 'litigationFreezing'
    | 'specialAccountForLoanRepayment'
    | 'coManaged'
  bankName?: string
  description?: string
  status?: 'enabled' | 'disabled'
  /**
   * value=true时添加到账户底表
   */
  inUse?: boolean
  projectId?: number
  companyId?: number
}

export type AccountIncomeFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  accountId?:
    | number
    | {
        $in?: Array<number>
      }
  incomeType?:
    | (
        | 'house'
        | 'bankInterest'
        | 'contacts'
        | 'otherFinancing'
        | 'bankLoan'
        | 'property'
        | 'agency'
        | 'project'
        | 'parkingSpace'
        | 'agencyForDocuments'
        | 'rent'
        | 'unknown'
      )
    | {
        $in?: Array<
          | 'house'
          | 'bankInterest'
          | 'contacts'
          | 'otherFinancing'
          | 'bankLoan'
          | 'property'
          | 'agency'
          | 'project'
          | 'parkingSpace'
          | 'agencyForDocuments'
          | 'rent'
          | 'unknown'
        >
      }
  amount?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  date?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
}

export type AccountIncome = {
  /**
   * 收款日期
   */
  date: Date
  amount: string
  incomeType:
    | 'house'
    | 'bankInterest'
    | 'contacts'
    | 'otherFinancing'
    | 'bankLoan'
    | 'property'
    | 'agency'
    | 'project'
    | 'parkingSpace'
    | 'agencyForDocuments'
    | 'rent'
    | 'unknown'
  account: Account
  description?: string
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type incomeType =
  | 'house'
  | 'bankInterest'
  | 'contacts'
  | 'otherFinancing'
  | 'bankLoan'
  | 'property'
  | 'agency'
  | 'project'
  | 'parkingSpace'
  | 'agencyForDocuments'
  | 'rent'
  | 'unknown'

export const incomeType = {
  HOUSE: 'house',
  BANK_INTEREST: 'bankInterest',
  CONTACTS: 'contacts',
  OTHER_FINANCING: 'otherFinancing',
  BANK_LOAN: 'bankLoan',
  PROPERTY: 'property',
  AGENCY: 'agency',
  PROJECT: 'project',
  PARKING_SPACE: 'parkingSpace',
  AGENCY_FOR_DOCUMENTS: 'agencyForDocuments',
  RENT: 'rent',
  UNKNOWN: 'unknown',
} as const

export type AccountIncomePaginationResult = {
  data: Array<AccountIncome>
  total: number
}

export type AccountIncomeCreateInput = {
  accountId: number
  incomeType:
    | 'house'
    | 'bankInterest'
    | 'contacts'
    | 'otherFinancing'
    | 'bankLoan'
    | 'property'
    | 'agency'
    | 'project'
    | 'parkingSpace'
    | 'agencyForDocuments'
    | 'rent'
    | 'unknown'
  description?: string
  amount: string
  /**
   * 收款日期
   */
  date: Date
}

export type AccountIncomeUpdateInput = {
  incomeType?:
    | 'house'
    | 'bankInterest'
    | 'contacts'
    | 'otherFinancing'
    | 'bankLoan'
    | 'property'
    | 'agency'
    | 'project'
    | 'parkingSpace'
    | 'agencyForDocuments'
    | 'rent'
    | 'unknown'
  description?: string
  amount?: string
  /**
   * 收款日期
   */
  date?: Date
  accountId?: number
}

export type ProjectExpensePlanFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  projectId?:
    | number
    | {
        $in?: Array<number>
      }
  mingyId?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  toAccount?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  appliedForDepartment?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  applicant?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  processStatus?:
    | ('pending' | 'processing' | 'pass')
    | {
        $in?: Array<'pending' | 'processing' | 'pass'>
      }
}

export type ExpensePlan = {
  /**
   * 明源项目
   */
  project: Project
  /**
   * 付款单位
   */
  company: Company
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  /**
   * 明源编号
   */
  mingyId: string
  /**
   * 流程状态
   */
  processStatus: 'pending' | 'processing' | 'pass'
  /**
   * 实际付款合计
   */
  actuallyPaymentAmount?: string
  /**
   * 核销金额合计
   */
  verificationAmount?: string
  /**
   * 计划付款金额合计
   */
  plannedPaymentAmount?: string
  /**
   * 未计划付款金额合计
   */
  unPlannedPaymentAmount?: string
  /**
   * 流程待付款金额
   */
  processedUnpaidAmount?: string
  /**
   * 未付款金额
   */
  unpaidAmount?: string
  /**
   * 收款人/收款单位
   */
  toCompany: string
  /**
   * 收款账号
   */
  toAccount: string
  /**
   * 实际收款账号
   */
  actuallyToAccount?: string
  /**
   * 应付金额
   */
  amountToPaid: string
  /**
   * 申请人
   */
  applicant: string
  /**
   * 申请部门
   */
  appliedForDepartment: string
  /**
   * 申请事由
   */
  appliedForReason: string
  /**
   * 施工单位
   */
  constructionCompany: string
  /**
   * 原因
   */
  reason?: string
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

/**
 * 流程状态
 */
export type processStatus = 'pending' | 'processing' | 'pass'

/**
 * 流程状态
 */
export const processStatus = {
  PENDING: 'pending',
  PROCESSING: 'processing',
  PASS: 'pass',
} as const

export type ProjectExpensePlan = {
  /**
   * 明源项目
   */
  project: Project
  /**
   * 付款单位
   */
  company: Company
  expensePlan?: ExpensePlan
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  /**
   * 收款人/收款单位
   */
  toCompany: string
  /**
   * 收款账号
   */
  toAccount: string
  /**
   * 实际收款账号
   */
  actuallyToAccount?: string
  /**
   * 应付金额
   */
  amountToPaid: string
  /**
   * 申请人
   */
  applicant: string
  /**
   * 申请部门
   */
  appliedForDepartment: string
  /**
   * 申请事由
   */
  appliedForReason: string
  /**
   * 施工单位
   */
  constructionCompany: string
  /**
   * 原因
   */
  reason?: string
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type ProjectExpensePlanPaginationResult = {
  data: Array<ProjectExpensePlan>
  total: number
}

export type ProjectExpensePlanCreateInput = {
  projectId: number
  companyId: number
  mingyId?: string
  /**
   * 申请人
   */
  applicant: string
  /**
   * 实际收款账号
   */
  actuallyToAccount?: string
  /**
   * 申请部门
   */
  appliedForDepartment: string
  /**
   * 申请事由
   */
  appliedForReason: string
  /**
   * 施工单位
   */
  constructionCompany: string
  /**
   * 收款账号
   */
  toAccount: string
  /**
   * 收款人/收款单位
   */
  toCompany: string
  /**
   * 原因
   */
  reason?: string
  /**
   * 应付金额
   */
  amountToPaid: string
}

export type ProjectExpensePlanUpdateInput = {
  /**
   * 申请人
   */
  applicant?: string
  /**
   * 实际收款账号
   */
  actuallyToAccount?: string
  /**
   * 申请部门
   */
  appliedForDepartment?: string
  /**
   * 申请事由
   */
  appliedForReason?: string
  /**
   * 施工单位
   */
  constructionCompany?: string
  /**
   * 收款账号
   */
  toAccount?: string
  /**
   * 收款人/收款单位
   */
  toCompany?: string
  /**
   * 原因
   */
  reason?: string
  /**
   * 应付金额
   */
  amountToPaid?: string
  projectId?: number
  companyId?: number
  mingyId?: string
}

export type ExpensePlanFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  projectId?:
    | number
    | {
        $in?: Array<number>
      }
  mingyId?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  toAccount?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  appliedForDepartment?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  applicant?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  processStatus?:
    | ('pending' | 'processing' | 'pass')
    | {
        $in?: Array<'pending' | 'processing' | 'pass'>
      }
}

export type ExpensePlanPaginationResult = {
  data: Array<ExpensePlan>
  total: number
}

export type ExpensePlanUpdateInput = {
  /**
   * 原因
   */
  reason?: string
  /**
   * 实际收款账号
   */
  actuallyToAccount?: string
  /**
   * 施工单位
   */
  constructionCompany?: string
}

export type PaymentPlanFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  plannedPaymentAmount?:
    | string
    | {
        $gt?: string
        $lt?: string
        $gte?: string
        $lte?: string
      }
  unpaidAmount?:
    | string
    | {
        $gt?: string
        $lt?: string
        $gte?: string
        $lte?: string
      }
  planDate?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  confirmed?:
    | boolean
    | {
        $in?: Array<boolean>
      }
  expensePlanId?:
    | number
    | {
        $in?: Array<number>
      }
}

export type PaymentPlan = {
  expensePlanId: number
  projectExpensePlanId?: number
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  /**
   * 支出类别
   */
  expenseTypeId?: number
  /**
   * 计划付款金额
   */
  plannedPaymentAmount: string
  /**
   * 是否核销
   */
  verification: boolean
  /**
   * 核销金额
   */
  verificationAmount?: string
  /**
   * 核销原因
   */
  verificationReason?: string
  /**
   * 计划日期
   */
  planDate: Date
  /**
   * 是否确认计划
   */
  confirmed: {
    [key: string]: unknown
  }
  /**
   * 实际支付金额
   */
  actuallyPaymentAmount: {
    [key: string]: unknown
  }
  /**
   * 未付款金额
   */
  unpaidAmount: {
    [key: string]: unknown
  }
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type PaymentPlanPaginationResult = {
  data: Array<PaymentPlan>
  total: number
}

export type PaymentPlanCreateInput = {
  /**
   * 计划日期
   */
  planDate: Date
  /**
   * 是否核销
   */
  verification: boolean
  /**
   * 核销金额
   */
  verificationAmount?: string
  /**
   * 核销原因
   */
  verificationReason?: string
  projectExpensePlanId?: number
  /**
   * 支出类别
   */
  expenseTypeId?: number
  /**
   * 计划付款金额
   */
  plannedPaymentAmount: string
}

export type PaymentPlanBatchConfirmedInput = {
  ids: Array<number>
}

export type PaymentPlanUpdateInput = {
  /**
   * 计划日期
   */
  planDate?: Date
  /**
   * 是否核销
   */
  verification?: boolean
  /**
   * 核销金额
   */
  verificationAmount?: string
  /**
   * 核销原因
   */
  verificationReason?: string
  projectExpensePlanId?: number
  /**
   * 支出类别
   */
  expenseTypeId?: number
  /**
   * 计划付款金额
   */
  plannedPaymentAmount?: string
}

export type ActuallyPaymentFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
}

export type ActuallyPayment = {
  account: Account
  expensePlanId: number
  paymentPlanId: number
  expenseTypeId?: number
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  /**
   * 付款金额
   */
  paymentAmount: string
  /**
   * 付款日期
   */
  paymentDate: Date
  /**
   * 备注
   */
  description?: string
  /**
   * 是否确认付款
   */
  confirmed: boolean
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type ActuallyPaymentPaginationResult = {
  data: Array<ActuallyPayment>
  total: number
}

export type ActuallyPaymentCreateInput = {
  accountId: number
  /**
   * 备注
   */
  description?: string
  /**
   * 付款日期
   */
  paymentDate: Date
  /**
   * 付款金额
   */
  paymentAmount: string
}

export type ActuallyPaymentUpdateInput = {
  /**
   * 备注
   */
  description?: string
  /**
   * 付款日期
   */
  paymentDate?: Date
  /**
   * 付款金额
   */
  paymentAmount?: string
  accountId?: number
}

export type NonProcessExpenseFilter = {
  id?:
    | number
    | {
        $in?: Array<number>
      }
  createdBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  updatedBy?:
    | string
    | {
        $like?: string
        $in?: Array<string>
      }
  createdAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
  updatedAt?:
    | Date
    | {
        $gt?: Date
        $lt?: Date
        $gte?: Date
        $lte?: Date
      }
}

export type NonProcessExpense = {
  account: Account
  /**
   * 创建人
   */
  createdBy?: User
  /**
   * 最后更新的人
   */
  updatedBy?: User
  /**
   * 付款金额
   */
  paymentAmount: string
  /**
   * 支出类别
   */
  expenseTypeId?: number
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type NonProcessExpensePaginationResult = {
  data: Array<NonProcessExpense>
  total: number
}

export type NonProcessExpenseCreateInput = {
  /**
   * 有id为编辑，没有id是新增
   */
  id?: number
  /**
   * 付款金额
   */
  paymentAmount: string
  /**
   * 支出类别
   */
  expenseTypeId?: number
}

export type NonProcessExpenseSaveInput = {
  data: Array<NonProcessExpenseCreateInput>
  deletedIds?: Array<number>
}

export type ExpenseType = {
  /**
   * 创建人
   */
  createdBy?: number
  /**
   * 最后更新的人
   */
  updatedBy?: number
  /**
   * 名称
   */
  name: string
  /**
   * 上级id
   */
  parentId?: number
  path?: Array<number>
  /**
   * 科目代码
   */
  code: string
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type ExpenseTypePaginationResult = {
  data: Array<ExpenseType>
  total: number
}

export type PresaleSupervisionFundsDetail = {
  /**
   * 创建人
   */
  createdBy?: number
  /**
   * 最后更新的人
   */
  updatedBy?: number
  project: Project
  /**
   * 批次名称
   */
  name: string
  /**
   * 预售监管额度
   */
  supervisionAmount: string
  /**
   * 留存额度
   */
  reserveAmount: string
  /**
   * 预售证对应楼栋
   */
  buildingsWithPresaleCertificate: string
  /**
   * 按施工进度(封顶)
   */
  accordingToConstructionProgress: string
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type PresaleSupervisionFundsDetailPaginationResult = {
  data: Array<PresaleSupervisionFundsDetail>
  total: number
}

export type PresaleSupervisionFundsDetailCreateInput = {
  /**
   * 有id为编辑，没有id是新增
   */
  id?: number
  /**
   * 按施工进度(封顶)
   */
  accordingToConstructionProgress: string
  /**
   * 预售证对应楼栋
   */
  buildingsWithPresaleCertificate: string
  /**
   * 留存额度
   */
  reserveAmount: string
  /**
   * 预售监管额度
   */
  supervisionAmount: string
  /**
   * 批次名称
   */
  name: string
}

export type PresaleSupervisionFundsDetailSaveInput = {
  data: Array<PresaleSupervisionFundsDetailCreateInput>
  deletedIds?: Array<number>
}

export type PresaleSupervisionWithdrawableFundsDetail = {
  /**
   * 创建人
   */
  createdBy?: number
  /**
   * 最后更新的人
   */
  updatedBy?: number
  project: Project
  /**
   * 批次名称
   */
  name: string
  /**
   * 账号
   */
  account: string
  /**
   * 账户余额
   */
  accountBalance: string
  /**
   * 监管协议应留存金额
   */
  reserveAmount: string
  /**
   * 季度利息收入
   */
  quarterlyInterestIncome: string
  /**
   * 推算应提取金额
   */
  calculatedAmountWithdraw: string
  id: number
  /**
   * 创建时间
   */
  createdAt: {
    [key: string]: unknown
  }
  /**
   * 最后更新时间
   */
  updatedAt: {
    [key: string]: unknown
  }
}

export type PresaleSupervisionWithdrawableFundsDetailPaginationResult = {
  data: Array<PresaleSupervisionWithdrawableFundsDetail>
  total: number
}

export type PresaleSupervisionWithdrawableFundsDetailCreateInput = {
  /**
   * 有id为编辑，没有id是新增
   */
  id?: number
  /**
   * 账号
   */
  account: string
  /**
   * 账户余额
   */
  accountBalance: string
  /**
   * 监管协议应留存金额
   */
  reserveAmount: string
  /**
   * 推算应提取金额
   */
  calculatedAmountWithdraw: string
  /**
   * 批次名称
   */
  name: string
  /**
   * 季度利息收入
   */
  quarterlyInterestIncome: string
}

export type PresaleSupervisionWithdrawableFundsDetailSaveInput = {
  data: Array<PresaleSupervisionWithdrawableFundsDetailCreateInput>
  deletedIds?: Array<number>
}

export type AuthControllerCallbackData = {
  query: {
    /**
     * 企业微信授权所需的code
     */
    code: string
  }
}

export type AuthControllerCallbackResponse = unknown

export type AuthControllerCallbackError = unknown

export type AuthControllerDevTokenResponse = unknown

export type AuthControllerDevTokenError = unknown

export type AuthControllerProfileResponse = User

export type AuthControllerProfileError = unknown

export type AuthControllerLoginData = {
  body: WeworkLoginInput
}

export type AuthControllerLoginResponse = unknown

export type AuthControllerLoginError = LoginResult

export type UserControllerListData = {
  query?: {
    /**
     * 实际类型为UserFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为UserSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type UserControllerListResponse = UserPaginationResult

export type UserControllerListError = unknown

export type UserControllerGetOneData = {
  path: {
    id: number
  }
}

export type UserControllerGetOneResponse = User

export type UserControllerGetOneError = unknown

export type UserControllerDeleteData = {
  path: {
    id: number
  }
}

export type UserControllerDeleteResponse = void

export type UserControllerDeleteError = unknown

export type UserControllerUpdateOneData = {
  body: UserPermissionBatchCreateInput
  path: {
    id: number
  }
}

export type UserControllerUpdateOneResponse = User

export type UserControllerUpdateOneError = unknown

export type ProjectControllerListData = {
  query?: {
    /**
     * 实际类型为ProjectFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type ProjectControllerListResponse = ProjectPaginationResult

export type ProjectControllerListError = unknown

export type ProjectControllerCreateOneData = {
  body: ProjectCreateInput
}

export type ProjectControllerCreateOneResponse = Project

export type ProjectControllerCreateOneError = unknown

export type ProjectControllerMyProjectsData = {
  query?: {
    /**
     * 实际类型为ProjectFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type ProjectControllerMyProjectsResponse = ProjectPaginationResult

export type ProjectControllerMyProjectsError = unknown

export type ProjectControllerGetOneData = {
  path: {
    id: number
  }
}

export type ProjectControllerGetOneResponse = Project

export type ProjectControllerGetOneError = unknown

export type ProjectControllerUpdateOneData = {
  body: ProjectUpdateInput
  path: {
    id: number
  }
}

export type ProjectControllerUpdateOneResponse = Project

export type ProjectControllerUpdateOneError = unknown

export type ProjectControllerDeleteData = {
  path: {
    id: number
  }
}

export type ProjectControllerDeleteResponse = void

export type ProjectControllerDeleteError = unknown

export type CompanyControllerListData = {
  query?: {
    /**
     * 实际类型为CompanyFilter，需要使用qs.stringify()
     */
    filter?: string
    projectId?: number
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type CompanyControllerListResponse = CompanyPaginationResult

export type CompanyControllerListError = unknown

export type CompanyControllerCreateOneData = {
  body: CompanyCreateInput
}

export type CompanyControllerCreateOneResponse = Company

export type CompanyControllerCreateOneError = unknown

export type CompanyControllerMyProjectsData = {
  query?: {
    /**
     * 实际类型为CompanyFilter，需要使用qs.stringify()
     */
    filter?: string
    projectId?: number
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type CompanyControllerMyProjectsResponse = CompanyPaginationResult

export type CompanyControllerMyProjectsError = unknown

export type CompanyControllerGetOneData = {
  path: {
    id: number
  }
}

export type CompanyControllerGetOneResponse = Company

export type CompanyControllerGetOneError = unknown

export type CompanyControllerUpdateOneData = {
  body: CompanyUpdateInput
  path: {
    id: number
  }
}

export type CompanyControllerUpdateOneResponse = Company

export type CompanyControllerUpdateOneError = unknown

export type CompanyControllerDeleteData = {
  path: {
    id: number
  }
}

export type CompanyControllerDeleteResponse = void

export type CompanyControllerDeleteError = unknown

export type RoleControllerListData = {
  query?: {
    /**
     * 实际类型为RoleFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type RoleControllerListResponse = RolePaginationResult

export type RoleControllerListError = unknown

export type RoleControllerCreateOneData = {
  body: RoleCreateInput
}

export type RoleControllerCreateOneResponse = Role

export type RoleControllerCreateOneError = unknown

export type RoleControllerGetOneData = {
  path: {
    id: number
  }
}

export type RoleControllerGetOneResponse = Role

export type RoleControllerGetOneError = unknown

export type RoleControllerUpdateOneData = {
  body: RoleUpdateInput
  path: {
    id: number
  }
}

export type RoleControllerUpdateOneResponse = Role

export type RoleControllerUpdateOneError = unknown

export type RoleControllerDeleteData = {
  path: {
    id: number
  }
}

export type RoleControllerDeleteResponse = void

export type RoleControllerDeleteError = unknown

export type AccountControllerListData = {
  query?: {
    /**
     * 实际类型为AccountFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type AccountControllerListResponse = AccountPaginationResult

export type AccountControllerListError = unknown

export type AccountControllerCreateOneData = {
  body: AccountCreateInput
}

export type AccountControllerCreateOneResponse = Account

export type AccountControllerCreateOneError = unknown

export type AccountControllerMyAccountsData = {
  query?: {
    /**
     * 实际类型为AccountFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type AccountControllerMyAccountsResponse = AccountPaginationResult

export type AccountControllerMyAccountsError = unknown

export type AccountControllerGetOneData = {
  path: {
    id: number
  }
}

export type AccountControllerGetOneResponse = Account

export type AccountControllerGetOneError = unknown

export type AccountControllerUpdateOneData = {
  body: AccountUpdateInput
  path: {
    id: number
  }
}

export type AccountControllerUpdateOneResponse = Account

export type AccountControllerUpdateOneError = unknown

export type AccountControllerDeleteData = {
  path: {
    id: number
  }
}

export type AccountControllerDeleteResponse = void

export type AccountControllerDeleteError = unknown

export type AccountIncomeControllerListData = {
  query?: {
    /**
     * 实际类型为AccountIncomeFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type AccountIncomeControllerListResponse = AccountIncomePaginationResult

export type AccountIncomeControllerListError = unknown

export type AccountIncomeControllerCreateOneData = {
  body: AccountIncomeCreateInput
}

export type AccountIncomeControllerCreateOneResponse = AccountIncome

export type AccountIncomeControllerCreateOneError = unknown

export type AccountIncomeControllerGetOneData = {
  path: {
    id: number
  }
}

export type AccountIncomeControllerGetOneResponse = AccountIncome

export type AccountIncomeControllerGetOneError = unknown

export type AccountIncomeControllerUpdateOneData = {
  body: AccountIncomeUpdateInput
  path: {
    id: number
  }
}

export type AccountIncomeControllerUpdateOneResponse = AccountIncome

export type AccountIncomeControllerUpdateOneError = unknown

export type AccountIncomeControllerDeleteData = {
  path: {
    id: number
  }
}

export type AccountIncomeControllerDeleteResponse = void

export type AccountIncomeControllerDeleteError = unknown

export type ProjectExpensePlanControllerListData = {
  query?: {
    /**
     * 实际类型为ProjectExpensePlanFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type ProjectExpensePlanControllerListResponse = ProjectExpensePlanPaginationResult

export type ProjectExpensePlanControllerListError = unknown

export type ProjectExpensePlanControllerCreateOneData = {
  body: ProjectExpensePlanCreateInput
}

export type ProjectExpensePlanControllerCreateOneResponse = ProjectExpensePlan

export type ProjectExpensePlanControllerCreateOneError = unknown

export type ProjectExpensePlanControllerGetOneData = {
  path: {
    id: number
  }
}

export type ProjectExpensePlanControllerGetOneResponse = ProjectExpensePlan

export type ProjectExpensePlanControllerGetOneError = unknown

export type ProjectExpensePlanControllerUpdateOneData = {
  body: ProjectExpensePlanUpdateInput
  path: {
    id: number
  }
}

export type ProjectExpensePlanControllerUpdateOneResponse = ProjectExpensePlan

export type ProjectExpensePlanControllerUpdateOneError = unknown

export type ProjectExpensePlanControllerDeleteData = {
  path: {
    id: number
  }
}

export type ProjectExpensePlanControllerDeleteResponse = void

export type ProjectExpensePlanControllerDeleteError = unknown

export type ExpensePlanControllerListData = {
  query?: {
    /**
     * 实际类型为ExpensePlanFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type ExpensePlanControllerListResponse = ExpensePlanPaginationResult

export type ExpensePlanControllerListError = unknown

export type ExpensePlanControllerGetOneData = {
  path: {
    id: number
  }
}

export type ExpensePlanControllerGetOneResponse = ExpensePlan

export type ExpensePlanControllerGetOneError = unknown

export type ExpensePlanControllerUpdateOneData = {
  body: ExpensePlanUpdateInput
  path: {
    id: number
  }
}

export type ExpensePlanControllerUpdateOneResponse = ExpensePlan

export type ExpensePlanControllerUpdateOneError = unknown

export type ExpensePlanControllerDeleteData = {
  path: {
    id: number
  }
}

export type ExpensePlanControllerDeleteResponse = void

export type ExpensePlanControllerDeleteError = unknown

export type PaymentPlanControllerListData = {
  path: {
    expensePlanId: number
  }
  query?: {
    /**
     * 实际类型为PaymentPlanFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type PaymentPlanControllerListResponse = PaymentPlanPaginationResult

export type PaymentPlanControllerListError = unknown

export type PaymentPlanControllerCreateOneData = {
  body: PaymentPlanCreateInput
  path: {
    expensePlanId: number
  }
}

export type PaymentPlanControllerCreateOneResponse = PaymentPlan

export type PaymentPlanControllerCreateOneError = unknown

export type PaymentPlanControllerGetOneData = {
  path: {
    expensePlanId: number
    id: number
  }
}

export type PaymentPlanControllerGetOneResponse = PaymentPlan

export type PaymentPlanControllerGetOneError = unknown

export type PaymentPlanControllerUpdateOneData = {
  body: PaymentPlanUpdateInput
  path: {
    expensePlanId: number
    id: number
  }
}

export type PaymentPlanControllerUpdateOneResponse = PaymentPlan

export type PaymentPlanControllerUpdateOneError = unknown

export type PaymentPlanControllerDeleteData = {
  path: {
    id: number
  }
}

export type PaymentPlanControllerDeleteResponse = void

export type PaymentPlanControllerDeleteError = unknown

export type PaymentPlanControllerCreateManyData = {
  body: Array<PaymentPlanCreateInput>
  path: {
    expensePlanId: number
  }
}

export type PaymentPlanControllerCreateManyResponse = Array<PaymentPlan>

export type PaymentPlanControllerCreateManyError = unknown

export type PaymentPlanControllerBatchConfirmedData = {
  body: PaymentPlanBatchConfirmedInput
  path: {
    expensePlanId: number
  }
}

export type PaymentPlanControllerBatchConfirmedResponse = Array<PaymentPlan>

export type PaymentPlanControllerBatchConfirmedError = unknown

export type ActuallyPaymentControllerListData = {
  path: {
    paymentPlanId: number
  }
  query?: {
    /**
     * 实际类型为ActuallyPaymentFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type ActuallyPaymentControllerListResponse = ActuallyPaymentPaginationResult

export type ActuallyPaymentControllerListError = unknown

export type ActuallyPaymentControllerCreateOneData = {
  body: ActuallyPaymentCreateInput
  path: {
    paymentPlanId: number
  }
}

export type ActuallyPaymentControllerCreateOneResponse = ActuallyPayment

export type ActuallyPaymentControllerCreateOneError = unknown

export type ActuallyPaymentControllerGetOneData = {
  path: {
    id: number
    paymentPlanId: number
  }
}

export type ActuallyPaymentControllerGetOneResponse = ActuallyPayment

export type ActuallyPaymentControllerGetOneError = unknown

export type ActuallyPaymentControllerUpdateOneData = {
  body: ActuallyPaymentUpdateInput
  path: {
    id: number
    paymentPlanId: number
  }
}

export type ActuallyPaymentControllerUpdateOneResponse = ActuallyPayment

export type ActuallyPaymentControllerUpdateOneError = unknown

export type ActuallyPaymentControllerDeleteData = {
  path: {
    id: number
  }
}

export type ActuallyPaymentControllerDeleteResponse = void

export type ActuallyPaymentControllerDeleteError = unknown

export type ActuallyPaymentControllerConfirmedData = {
  path: {
    id: number
    paymentPlanId: number
  }
}

export type ActuallyPaymentControllerConfirmedResponse = ActuallyPayment

export type ActuallyPaymentControllerConfirmedError = unknown

export type NonProcessExpenseControllerListData = {
  path: {
    accountId: number
  }
  query?: {
    /**
     * 实际类型为NonProcessExpenseFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type NonProcessExpenseControllerListResponse = NonProcessExpensePaginationResult

export type NonProcessExpenseControllerListError = unknown

export type NonProcessExpenseControllerGetOneData = {
  path: {
    accountId: number
    id: number
  }
}

export type NonProcessExpenseControllerGetOneResponse = NonProcessExpense

export type NonProcessExpenseControllerGetOneError = unknown

export type NonProcessExpenseControllerCreateManyData = {
  body: NonProcessExpenseSaveInput
  path: {
    accountId: number
  }
}

export type NonProcessExpenseControllerCreateManyResponse = Array<NonProcessExpense>

export type NonProcessExpenseControllerCreateManyError = unknown

export type ExpenseTypeControllerListData = {
  query?: {
    /**
     * 实际类型为ExpenseTypeFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type ExpenseTypeControllerListResponse = ExpenseTypePaginationResult

export type ExpenseTypeControllerListError = unknown

export type ExpenseTotalControllerTotalByExpenseTypeData = {
  query?: {
    companyId?: number
    endAt?: Date
    projectId?: number
    skip?: number
    startAt?: Date
    take?: number
  }
}

export type ExpenseTotalControllerTotalByExpenseTypeResponse = unknown

export type ExpenseTotalControllerTotalByExpenseTypeError = unknown

export type ExpenseTotalControllerTotalByProjectData = {
  query?: {
    companyId?: number
    endAt?: Date
    projectId?: number
    skip?: number
    startAt?: Date
    take?: number
  }
}

export type ExpenseTotalControllerTotalByProjectResponse = unknown

export type ExpenseTotalControllerTotalByProjectError = unknown

export type ExpenseTotalControllerTotalByCompanyData = {
  query?: {
    companyId?: number
    endAt?: Date
    projectId?: number
    skip?: number
    startAt?: Date
    take?: number
  }
}

export type ExpenseTotalControllerTotalByCompanyResponse = unknown

export type ExpenseTotalControllerTotalByCompanyError = unknown

export type PresaleSupervisionFundsDetailControllerListData = {
  path: {
    projectId: number
  }
  query?: {
    /**
     * 实际类型为BaseFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type PresaleSupervisionFundsDetailControllerListResponse = PresaleSupervisionFundsDetailPaginationResult

export type PresaleSupervisionFundsDetailControllerListError = unknown

export type PresaleSupervisionFundsDetailControllerSaveData = {
  body: PresaleSupervisionFundsDetailSaveInput
  path: {
    projectId: number
  }
}

export type PresaleSupervisionFundsDetailControllerSaveResponse = Array<PresaleSupervisionFundsDetail>

export type PresaleSupervisionFundsDetailControllerSaveError = unknown

export type PresaleSupervisionFundsDetailControllerDeleteData = {
  path: {
    id: number
  }
}

export type PresaleSupervisionFundsDetailControllerDeleteResponse = void

export type PresaleSupervisionFundsDetailControllerDeleteError = unknown

export type PresaleSupervisionWithdrawableFundsDetailControllerListData = {
  path: {
    projectId: number
  }
  query?: {
    /**
     * 实际类型为BaseFilter，需要使用qs.stringify()
     */
    filter?: string
    skip?: number
    /**
     * 实际类型为BaseSortBy，需要使用qs.stringify()
     */
    sortBy?: string
    take?: number
  }
}

export type PresaleSupervisionWithdrawableFundsDetailControllerListResponse =
  PresaleSupervisionWithdrawableFundsDetailPaginationResult

export type PresaleSupervisionWithdrawableFundsDetailControllerListError = unknown

export type PresaleSupervisionWithdrawableFundsDetailControllerSaveData = {
  body: PresaleSupervisionWithdrawableFundsDetailSaveInput
  path: {
    projectId: number
  }
}

export type PresaleSupervisionWithdrawableFundsDetailControllerSaveResponse =
  Array<PresaleSupervisionWithdrawableFundsDetail>

export type PresaleSupervisionWithdrawableFundsDetailControllerSaveError = unknown

export type PresaleSupervisionWithdrawableFundsDetailControllerDeleteData = {
  path: {
    id: number
  }
}

export type PresaleSupervisionWithdrawableFundsDetailControllerDeleteResponse = void

export type PresaleSupervisionWithdrawableFundsDetailControllerDeleteError = unknown

export type AccountIncomeControllerListResponseTransformer = (data: any) => Promise<AccountIncomeControllerListResponse>

export type AccountIncomePaginationResultModelResponseTransformer = (data: any) => AccountIncomePaginationResult

export type AccountIncomeModelResponseTransformer = (data: any) => AccountIncome

export const AccountIncomeModelResponseTransformer: AccountIncomeModelResponseTransformer = (data) => {
  if (data?.date) {
    data.date = new Date(data.date)
  }
  return data
}

export const AccountIncomePaginationResultModelResponseTransformer: AccountIncomePaginationResultModelResponseTransformer =
  (data) => {
    if (Array.isArray(data?.data)) {
      data.data.forEach(AccountIncomeModelResponseTransformer)
    }
    return data
  }

export const AccountIncomeControllerListResponseTransformer: AccountIncomeControllerListResponseTransformer = async (
  data,
) => {
  AccountIncomePaginationResultModelResponseTransformer(data)
  return data
}

export type AccountIncomeControllerCreateOneResponseTransformer = (
  data: any,
) => Promise<AccountIncomeControllerCreateOneResponse>

export const AccountIncomeControllerCreateOneResponseTransformer: AccountIncomeControllerCreateOneResponseTransformer =
  async (data) => {
    AccountIncomeModelResponseTransformer(data)
    return data
  }

export type AccountIncomeControllerGetOneResponseTransformer = (
  data: any,
) => Promise<AccountIncomeControllerGetOneResponse>

export const AccountIncomeControllerGetOneResponseTransformer: AccountIncomeControllerGetOneResponseTransformer =
  async (data) => {
    AccountIncomeModelResponseTransformer(data)
    return data
  }

export type AccountIncomeControllerUpdateOneResponseTransformer = (
  data: any,
) => Promise<AccountIncomeControllerUpdateOneResponse>

export const AccountIncomeControllerUpdateOneResponseTransformer: AccountIncomeControllerUpdateOneResponseTransformer =
  async (data) => {
    AccountIncomeModelResponseTransformer(data)
    return data
  }

export type PaymentPlanControllerListResponseTransformer = (data: any) => Promise<PaymentPlanControllerListResponse>

export type PaymentPlanPaginationResultModelResponseTransformer = (data: any) => PaymentPlanPaginationResult

export type PaymentPlanModelResponseTransformer = (data: any) => PaymentPlan

export const PaymentPlanModelResponseTransformer: PaymentPlanModelResponseTransformer = (data) => {
  if (data?.planDate) {
    data.planDate = new Date(data.planDate)
  }
  return data
}

export const PaymentPlanPaginationResultModelResponseTransformer: PaymentPlanPaginationResultModelResponseTransformer =
  (data) => {
    if (Array.isArray(data?.data)) {
      data.data.forEach(PaymentPlanModelResponseTransformer)
    }
    return data
  }

export const PaymentPlanControllerListResponseTransformer: PaymentPlanControllerListResponseTransformer = async (
  data,
) => {
  PaymentPlanPaginationResultModelResponseTransformer(data)
  return data
}

export type PaymentPlanControllerCreateOneResponseTransformer = (
  data: any,
) => Promise<PaymentPlanControllerCreateOneResponse>

export const PaymentPlanControllerCreateOneResponseTransformer: PaymentPlanControllerCreateOneResponseTransformer =
  async (data) => {
    PaymentPlanModelResponseTransformer(data)
    return data
  }

export type PaymentPlanControllerGetOneResponseTransformer = (data: any) => Promise<PaymentPlanControllerGetOneResponse>

export const PaymentPlanControllerGetOneResponseTransformer: PaymentPlanControllerGetOneResponseTransformer = async (
  data,
) => {
  PaymentPlanModelResponseTransformer(data)
  return data
}

export type PaymentPlanControllerUpdateOneResponseTransformer = (
  data: any,
) => Promise<PaymentPlanControllerUpdateOneResponse>

export const PaymentPlanControllerUpdateOneResponseTransformer: PaymentPlanControllerUpdateOneResponseTransformer =
  async (data) => {
    PaymentPlanModelResponseTransformer(data)
    return data
  }

export type PaymentPlanControllerCreateManyResponseTransformer = (
  data: any,
) => Promise<PaymentPlanControllerCreateManyResponse>

export const PaymentPlanControllerCreateManyResponseTransformer: PaymentPlanControllerCreateManyResponseTransformer =
  async (data) => {
    if (Array.isArray(data)) {
      data.forEach(PaymentPlanModelResponseTransformer)
    }
    return data
  }

export type PaymentPlanControllerBatchConfirmedResponseTransformer = (
  data: any,
) => Promise<PaymentPlanControllerBatchConfirmedResponse>

export const PaymentPlanControllerBatchConfirmedResponseTransformer: PaymentPlanControllerBatchConfirmedResponseTransformer =
  async (data) => {
    if (Array.isArray(data)) {
      data.forEach(PaymentPlanModelResponseTransformer)
    }
    return data
  }

export type ActuallyPaymentControllerListResponseTransformer = (
  data: any,
) => Promise<ActuallyPaymentControllerListResponse>

export type ActuallyPaymentPaginationResultModelResponseTransformer = (data: any) => ActuallyPaymentPaginationResult

export type ActuallyPaymentModelResponseTransformer = (data: any) => ActuallyPayment

export const ActuallyPaymentModelResponseTransformer: ActuallyPaymentModelResponseTransformer = (data) => {
  if (data?.paymentDate) {
    data.paymentDate = new Date(data.paymentDate)
  }
  return data
}

export const ActuallyPaymentPaginationResultModelResponseTransformer: ActuallyPaymentPaginationResultModelResponseTransformer =
  (data) => {
    if (Array.isArray(data?.data)) {
      data.data.forEach(ActuallyPaymentModelResponseTransformer)
    }
    return data
  }

export const ActuallyPaymentControllerListResponseTransformer: ActuallyPaymentControllerListResponseTransformer =
  async (data) => {
    ActuallyPaymentPaginationResultModelResponseTransformer(data)
    return data
  }

export type ActuallyPaymentControllerCreateOneResponseTransformer = (
  data: any,
) => Promise<ActuallyPaymentControllerCreateOneResponse>

export const ActuallyPaymentControllerCreateOneResponseTransformer: ActuallyPaymentControllerCreateOneResponseTransformer =
  async (data) => {
    ActuallyPaymentModelResponseTransformer(data)
    return data
  }

export type ActuallyPaymentControllerGetOneResponseTransformer = (
  data: any,
) => Promise<ActuallyPaymentControllerGetOneResponse>

export const ActuallyPaymentControllerGetOneResponseTransformer: ActuallyPaymentControllerGetOneResponseTransformer =
  async (data) => {
    ActuallyPaymentModelResponseTransformer(data)
    return data
  }

export type ActuallyPaymentControllerUpdateOneResponseTransformer = (
  data: any,
) => Promise<ActuallyPaymentControllerUpdateOneResponse>

export const ActuallyPaymentControllerUpdateOneResponseTransformer: ActuallyPaymentControllerUpdateOneResponseTransformer =
  async (data) => {
    ActuallyPaymentModelResponseTransformer(data)
    return data
  }

export type ActuallyPaymentControllerConfirmedResponseTransformer = (
  data: any,
) => Promise<ActuallyPaymentControllerConfirmedResponse>

export const ActuallyPaymentControllerConfirmedResponseTransformer: ActuallyPaymentControllerConfirmedResponseTransformer =
  async (data) => {
    ActuallyPaymentModelResponseTransformer(data)
    return data
  }
